[{"/home/utoniolo/code/marco/frontend/src/index.js":"1","/home/utoniolo/code/marco/frontend/src/App.js":"2","/home/utoniolo/code/marco/frontend/src/utils/statistics.js":"3","/home/utoniolo/code/marco/frontend/src/utils/string.manipulation.js":"4","/home/utoniolo/code/marco/frontend/src/components/counter.jsx":"5","/home/utoniolo/code/marco/frontend/src/components/chart.jsx":"6"},{"size":227,"mtime":1610226737825,"results":"7","hashOfConfig":"8"},{"size":713,"mtime":1610226671312,"results":"9","hashOfConfig":"8"},{"size":548,"mtime":1610225907175,"results":"10","hashOfConfig":"8"},{"size":653,"mtime":1610223890213,"results":"11","hashOfConfig":"8"},{"size":312,"mtime":1610226596743,"results":"12","hashOfConfig":"8"},{"size":949,"mtime":1610226476088,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zr0e8b",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},"/home/utoniolo/code/marco/frontend/src/index.js",[],"/home/utoniolo/code/marco/frontend/src/App.js",["30"],"/home/utoniolo/code/marco/frontend/src/utils/statistics.js",["31"],"import axios from \"axios\";\nimport { stringtoDate, stringtoShortDate } from \"./string.manipulation\";\n\nexport function deathPerSecond(setData){\n    axios.get(\"https://api.covid19api.com/dayone/country/italy/status/confirmed\")\n    .then(res=>{\n        const arr = res.data;\n        const mapCases = new Map();\n        //converting date:\n\n        const arrayCases = arr.map(e => e.Cases);\n\n        arr.forEach(function(e){\n            this.set(stringtoShortDate(e.Date),e.Cases);\n        },mapCases);\n\n        setData({arrayCases, mapCases});\n    });\n}",["32","33"],"/home/utoniolo/code/marco/frontend/src/utils/string.manipulation.js",[],"/home/utoniolo/code/marco/frontend/src/components/counter.jsx",["34","35"],"import React, { useEffect, useState } from \"react\";\nimport { inttoString } from \"../utils/string.manipulation\";\nimport styles from \"../scss/counter.module.scss\";\n\nexport default function Counter(props) {\n  return (\n    <>\n      <div className={styles.counterCases}>{inttoString(props.init)}</div>\n    </>\n  );\n}\n","/home/utoniolo/code/marco/frontend/src/components/chart.jsx",["36"],"import React, { createRef, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js\";\nexport default function MyChart({data}) {\n  const ref = createRef();\n\n  useEffect(() => {\n    var ctx = ref.current.getContext(\"2d\");\n    new Chart(ctx, {\n      // The type of chart we want to create\n      type: \"line\",\n\n      // The data for our dataset\n      data: {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n        ],\n        datasets: [\n          {\n            label: \"My First dataset\",\n            backgroundColor: \"rgb(255, 99, 132)\",\n            borderColor: \"rgb(255, 99, 132)\",\n            data: data.arrayCases,\n          },\n        ],\n      },\n\n      // Configuration options go here\n      options: {},\n    });\n  }, [data.arrayCases,ref]);\n  return (\n    <canvas id=\"customizeChart\" width={400} height={400} ref={ref}></canvas>\n  );\n}\n",{"ruleId":"37","severity":1,"message":"38","line":3,"column":10,"nodeType":"39","messageId":"40","endLine":3,"endColumn":21},{"ruleId":"37","severity":1,"message":"41","line":2,"column":10,"nodeType":"39","messageId":"40","endLine":2,"endColumn":22},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"37","severity":1,"message":"46","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"47","line":1,"column":28,"nodeType":"39","messageId":"40","endLine":1,"endColumn":36},{"ruleId":"37","severity":1,"message":"48","line":1,"column":39,"nodeType":"39","messageId":"40","endLine":1,"endColumn":45},"no-unused-vars","'inttoString' is defined but never used.","Identifier","unusedVar","'stringtoDate' is defined but never used.","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]